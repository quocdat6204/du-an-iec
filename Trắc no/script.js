const quizData = [
    {
        question: "Th·ªß ƒë√¥ c·ªßa Vi·ªát Nam l√† g√¨?",
        options: ["H√† N·ªôi", "H·ªì Ch√≠ Minh", "ƒê√† N·∫µng", "Hu·∫ø"],
        correct: 0
    },
    {
        question: "ƒê√¢u l√† s·ªë l·ªõn nh·∫•t?",
        options: ["15", "25", "5", "10"],
        correct: 1
    },
    {
        question: "1 + 1 = ?",
        options: ["1", "2", "3", "4"],
        correct: 1
    },
    {
        question: "HTML l√† vi·∫øt t·∫Øt c·ªßa?",
        options: [
            "Hyper Text Markup Language",
            "High Text Markup Language",
            "Hyper Tabular Markup Language",
            "None of these"
        ],
        correct: 0
    },
    {
        question: "CSS d√πng ƒë·ªÉ l√†m g√¨?",
        options: [
            "T·∫°o c·∫•u tr√∫c web",
            "T·∫°o style cho web",
            "T·∫°o ch·ª©c nƒÉng cho web",
            "T·∫•t c·∫£ c√°c ƒë√°p √°n tr√™n"
        ],
        correct: 1
    }
];

let currentQuestion = 0;
const quiz = document.getElementById('quiz');
const submitBtn = document.getElementById('submit-btn');
const resultDiv = document.getElementById('result');
const skipBtn = document.getElementById('skip-btn');
const backBtn = document.getElementById('back-btn');
let score = 0;
let answered = false;
let userAnswers = new Array(quizData.length).fill(null); // M·∫£ng l∆∞u tr·ªØ ƒë√°p √°n ng∆∞·ªùi d√πng

function updateProgressBar() {
    const progressBarFill = document.querySelector('.progress-bar-fill');
    const progress = ((currentQuestion + 1) / quizData.length) * 100;
    document.querySelector('.progress-bar-fill').style.width = `${progress}%`;
}

function showQuestion() {
    document.getElementById('current-question').textContent = currentQuestion + 1;
    document.getElementById('total-questions').textContent = quizData.length;
    updateProgressBar();
    
    const questionData = quizData[currentQuestion];
    const questionDiv = document.createElement('div');
    questionDiv.classList.add('question');

    questionDiv.innerHTML = `
        <h2>${questionData.question}</h2>
        <div class="options">
            ${questionData.options.map((option, index) => `
                <div class="option" data-index="${index}">
                    ${option}
                </div>
            `).join('')}
        </div>
    `;

    quiz.innerHTML = '';
    quiz.appendChild(questionDiv);

    const options = document.querySelectorAll('.option');
    options.forEach(option => {
        option.addEventListener('click', () => selectOption(option));
    });
}

function selectOption(selected) {
    if (answered) return;
    
    document.querySelectorAll('.option').forEach(option => {
        option.classList.remove('selected');
    });
    selected.classList.add('selected');

    // Th√™m hi·ªáu ·ª©ng ripple
    const ripple = document.createElement('div');
    ripple.classList.add('ripple');
    selected.appendChild(ripple);
    setTimeout(() => ripple.remove(), 500);
}

function showResult() {
    const percentage = (score / quizData.length) * 100;
    let message = '';
    if (percentage >= 80) {
        message = 'Xu·∫•t s·∫Øc! üéâ';
    } else if (percentage >= 60) {
        message = 'Kh√° t·ªët! üëç';
    } else {
        message = 'H√£y c·ªë g·∫Øng h∆°n! üí™';
    }

    resultDiv.innerHTML = `
        <div class="result-score">${score}/${quizData.length}</div>
        <div class="result-message">${message}</div>
        <div class="result-percentage">${percentage}%</div>
        <button onclick="resetQuiz()">L√†m l·∫°i</button>
    `;
    submitBtn.style.display = 'none';
    skipBtn.style.display = 'none'; // ·∫®n n√∫t B·ªè qua khi xem k·∫øt qu·∫£
}

function checkAnswer() {
    const selected = document.querySelector('.option.selected');
    if (!selected && currentQuestion < quizData.length) {
        alert('Vui l√≤ng ch·ªçn m·ªôt ƒë√°p √°n!');
        return;
    }

    answered = true;
    const selectedIndex = parseInt(selected.dataset.index);
    const correct = quizData[currentQuestion].correct;

    // L∆∞u ƒë√°p √°n c·ªßa ng∆∞·ªùi d√πng
    userAnswers[currentQuestion] = selectedIndex;

    if (selectedIndex === correct) {
        score++;
        selected.classList.add('correct');
    } else {
        selected.classList.add('wrong');
        document.querySelectorAll('.option')[correct].classList.add('correct');
    }

    currentQuestion++;
    
    if (currentQuestion < quizData.length) {
        submitBtn.textContent = 'C√¢u ti·∫øp theo';
    } else {
        submitBtn.textContent = 'Xem k·∫øt qu·∫£';
    }
}

function nextQuestion() {
    if (currentQuestion < quizData.length) {
        answered = false;
        showQuestion();
        // N·∫øu c√¢u h·ªèi ƒë√£ ƒë∆∞·ª£c tr·∫£ l·ªùi, hi·ªÉn th·ªã ƒë√°p √°n ƒë√£ ch·ªçn v√† ƒë√∫ng/sai
        if (userAnswers[currentQuestion] !== null) {
            const selectedIndex = userAnswers[currentQuestion];
            const selectedOption = document.querySelector(`.option[data-index="${selectedIndex}"]`);
            const correctIndex = quizData[currentQuestion].correct;
            
            if (selectedOption) {
                selectedOption.classList.add('selected');
                answered = true;
                
                // Hi·ªÉn th·ªã ƒë√∫ng/sai
                if (selectedIndex === correctIndex) {
                    selectedOption.classList.add('correct'); // ƒê√∫ng
                } else {
                    selectedOption.classList.add('wrong'); // Sai
                    document.querySelector(`.option[data-index="${correctIndex}"]`).classList.add('correct'); // ƒê√°nh d·∫•u ƒë√°p √°n ƒë√∫ng
                }

                // ·∫®n n√∫t "C√¢u ti·∫øp theo" n·∫øu quay l·∫°i c√¢u ƒë√£ tr·∫£ l·ªùi
                submitBtn.style.display = 'none';
            }
        } else {
            submitBtn.textContent = 'Tr·∫£ l·ªùi';
            submitBtn.style.display = 'block'; // Hi·ªÉn th·ªã n√∫t "Tr·∫£ l·ªùi" n·∫øu c√¢u ch∆∞a ƒë∆∞·ª£c tr·∫£ l·ªùi
        }

        skipBtn.style.display = 'block'; // Hi·ªán n√∫t B·ªè qua
        backBtn.style.display = currentQuestion > 0 ? 'block' : 'none'; // Hi·ªán n√∫t "Quay l·∫°i" n·∫øu kh√¥ng ph·∫£i c√¢u ƒë·∫ßu ti√™n
    } else {
        showResult();
        skipBtn.style.display = 'none'; // ·∫®n n√∫t B·ªè qua khi kh√¥ng c√≤n c√¢u h·ªèi n√†o
        backBtn.style.display = 'none'; // ·∫®n n√∫t "Quay l·∫°i" khi hi·ªÉn th·ªã k·∫øt qu·∫£
    }
}

submitBtn.addEventListener('click', () => {
    if (!answered) {
        checkAnswer();
    } else {
        nextQuestion();
    }
});

skipBtn.addEventListener('click', () => {
    if (currentQuestion < quizData.length) {
        answered = true; // ƒê√°nh d·∫•u l√† ƒë√£ x·ª≠ l√Ω c√¢u h·ªèi
        currentQuestion++; // Chuy·ªÉn sang c√¢u ti·∫øp theo
        nextQuestion(); // Chuy·ªÉn sang c√¢u h·ªèi ti·∫øp theo
    }
});

backBtn.addEventListener('click', () => {
    if (currentQuestion > 0) {
        currentQuestion--; // Gi·∫£m c√¢u h·ªèi hi·ªán t·∫°i
        answered = false; // ƒê√°nh d·∫•u l√† ch∆∞a tr·∫£ l·ªùi
        nextQuestion(); // Hi·ªÉn th·ªã c√¢u h·ªèi tr∆∞·ªõc ƒë√≥
    }
    // Hi·ªÉn th·ªã ƒë√°p √°n ƒë√£ ch·ªçn v√† ƒë√∫ng/sai n·∫øu c√≥
    const selectedIndex = userAnswers[currentQuestion];
    const correctIndex = quizData[currentQuestion].correct;

    if (selectedIndex !== null) {
        const selectedOption = document.querySelector(`.option[data-index="${selectedIndex}"]`);
        if (selectedOption) {
            selectedOption.classList.add('selected');
            answered = true;
            
            // Hi·ªÉn th·ªã ƒë√∫ng/sai
            if (selectedIndex === correctIndex) {
                selectedOption.classList.add('correct'); // ƒê√∫ng
            } else {
                selectedOption.classList.add('wrong'); // Sai
                document.querySelector(`.option[data-index="${correctIndex}"]`).classList.add('correct'); // ƒê√°nh d·∫•u ƒë√°p √°n ƒë√∫ng
            }

            // ·∫®n n√∫t "C√¢u ti·∫øp theo" n·∫øu quay l·∫°i c√¢u ƒë√£ tr·∫£ l·ªùi
            submitBtn.style.display = 'none';
        }
    }
});

function resetQuiz() {
    currentQuestion = 0;
    score = 0;
    answered = false;
    submitBtn.style.display = 'block';
    submitBtn.textContent = 'Tr·∫£ l·ªùi';
    userAnswers.fill(null); // ƒê·∫∑t l·∫°i ƒë√°p √°n ng∆∞·ªùi d√πng
    resultDiv.innerHTML = '';
    skipBtn.style.display = 'block'; // Hi·ªán n√∫t B·ªè qua khi b·∫Øt ƒë·∫ßu l·∫°i
    backBtn.style.display = 'none'; // ·∫®n n√∫t "Quay l·∫°i" khi b·∫Øt ƒë·∫ßu l·∫°i
    showQuestion();
}

// Start the quiz
showQuestion();
